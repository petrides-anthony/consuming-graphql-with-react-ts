{"version":3,"sources":["components/Sidebar/Sidebar.tsx","components/SpaceXList/SpaceXList.tsx","App.tsx","index.tsx"],"names":["Sidebar","width","height","children","React","useState","xPosition","setX","useEffect","Fragment","className","style","transform","minHeight","onClick","SpaceXList","launchData","setLaunchData","fetch","method","headers","body","JSON","stringify","query","then","response","json","data","launchesPast","useLaunchData","map","launch","mission_name","launch_success","id","App","Grid","container","spacing","item","md","sm","xs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAwCeA,EArCC,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,SAChC,EAA0BC,IAAMC,UAAUJ,GAA1C,mBAAOK,EAAP,KAAkBC,EAAlB,KAaA,OAHAH,IAAMI,WAAU,WACdD,EAAK,KACJ,IAED,cAAC,IAAME,SAAP,UACE,sBACEC,UAAU,WACVC,MAAO,CACLC,UAAU,cAAD,OAAgBN,EAAhB,OACTL,MAAOA,EACPY,UAAWX,GALf,UAQE,wBACEY,QAAS,WApBbP,EADED,EAAY,EACT,GAECL,IAmBFS,UAAU,cACVC,MAAO,CACLC,UAAU,aAAD,OAAeX,EAAf,gBAGb,qBAAKS,UAAU,UAAf,SAA0BP,UCiBnBY,EAjBI,WACjB,IAAMC,EAhBc,WACpB,MAAoCZ,IAAMC,SAA0B,IAApE,mBAAOW,EAAP,KAAmBC,EAAnB,KAWA,OATAb,IAAMI,WAAU,WACdU,MAAM,mCAAoC,CACxCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAOC,KAAKC,UAAU,CAAEC,MAxBH,sHAyBpBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC5BF,MAAK,SAAAG,GAAI,OAAIX,EAAcW,EAAKA,KAAKC,mBACrC,IAEIb,EAIYc,GAEnB,OACE,gCACE,2DACA,oBAAIpB,UAAU,KAAd,SACGM,EAAWe,KAAI,SAAAC,GAAM,OACpB,+BACGA,EAAOC,aADV,IACyBD,EAAOE,eAAiB,SAAM,WAD9CF,EAAOG,aCRXC,MA1Bf,WACE,OACE,sBAAK1B,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACA,eAAC2B,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAtB,SACE,eAAC,EAAD,CAASzC,MAAO,IAAKC,OAAQ,QAA7B,UACE,2CACA,8EAAgD,uBAAK,uBAArD,yLAOJ,cAACmC,EAAA,EAAD,CAAMG,MAAI,EAACG,GAAI,EAAGF,GAAI,EAAtB,SACF,cAAC,EAAD,WAIF,6BCvBNG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.df28d3d1.chunk.js","sourcesContent":["import \"./Sidebar.css\";\nimport React from \"react\";\n\nconst Sidebar = ({ width, height, children }: any) => {\n  const [xPosition, setX] = React.useState(-width);\n\n  const toggleMenu = () => {\n    if (xPosition < 0) {\n      setX(0);\n    } else {\n      setX(-width);\n    }\n  };\n\n  React.useEffect(() => {\n    setX(0);\n  }, []);\n  return (\n    <React.Fragment>\n      <div\n        className=\"side-bar\"\n        style={{\n          transform: `translatex(${xPosition}px)`,\n          width: width,\n          minHeight: height\n        }}\n      >\n        <button\n          onClick={() => toggleMenu()}\n          className=\"toggle-menu\"\n          style={{\n            transform: `translate(${width}px, 20vh)`\n          }}\n        ></button>\n        <div className=\"content\">{children}</div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Sidebar;","import React from 'react';\n\nconst SPACEX_LAUNCHES_QUERY = `\n{\n  launchesPast(limit: 10) {\n    id\n    mission_name\n    launch_date_local\n    launch_success\n  }\n}\n`\ntype LaunchDetails = {\n  id: string;\n  mission_name: string;\n  launch_success?: boolean;\n  launch_date_local: Date;\n}\n\nconst useLaunchData = () => {\n  const [launchData, setLaunchData] = React.useState<LaunchDetails[]>([]);\n  \n  React.useEffect(() => {\n    fetch('https://api.spacex.land/graphql/', {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body:  JSON.stringify({ query: SPACEX_LAUNCHES_QUERY })\n    }).then(response => response.json())\n    .then(data => setLaunchData(data.data.launchesPast))\n  }, []);\n\n  return launchData;\n}\n\nconst SpaceXList = () => {\n  const launchData = useLaunchData();\n\n  return (\n    <div>\n      <h2>Space X: Last 10 Missions</h2>\n      <ul className=\"ul\">\n        {launchData.map(launch => (\n          <li key={launch.id}>\n            {launch.mission_name} {launch.launch_success ? '✅' : '❌'}\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n};\n\nexport default SpaceXList;","import React from 'react';\nimport './App.css';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Sidebar from './components/Sidebar/Sidebar';\nimport SpaceXList from './components/SpaceXList/SpaceXList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Grid container spacing={2}>\n          <Grid item md={3} sm={6}>\n            <Sidebar width={300} height={\"100vh\"}>\n              <h2>Exercises</h2>\n              <p>Start adding types/ interfaces to GQL project<br/><br/>\n              Think about what if you want to display this data in a card component.\n                  Where you click it and it displays further details.\n                  Think about error handling if the fetch goes wrong.</p>\n              \n            </Sidebar>\n          </Grid>\n          <Grid item xs={3} md={6}>\n        <SpaceXList/>\n          </Grid>\n          </Grid>\n      </header>\n      <body>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}